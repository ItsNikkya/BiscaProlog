colorofcard(red,c(_,S)):-S=hearts;S=diamonds.

colorofcard(black,c(_,S)):-S=clubs;S=spades.

card(c(R,S)):-ranks(LR),suits(LS),member(R,LR),member(S,LS).

% given

ranks([2,3,4,5,6,queen,jack,king,7,ace]).
suits([hearts,diamonds,spades,clubs]).

rankshigher(R1,R2):-
    ranks(R),append(_,[R2|LR],R),member(R1,LR).

samesuit(c(_,S),c(_,S)).

color(hearts,red).
color(diamonds,red).
color(spades,black).
color(clubs,black).

colorcard(C,c(R,S)):-color(S,C),ranks(LR),member(R,LR).

points(ace,11):-!.
points(7,10):-!.
points(king,4):-!.
points(jack,3):-!.
points(queen,2):-!.
points(X,0):-integer(X), X>=2, X=<6.

% Begin our code
:- use_module(library(lists)).

% Based on the card predicate above, this generates the deck.
deck(D) :-
	findall(c(R,S), card(c(R,S)),D).

% shuffles the deck
% D is the deck (generated by deck/1), SD is the shuffled deck (to be "sorted" by random_permutation/2)
shuffle(D, SD) :- 
	deck(D), random_permutation(D, SD).

% representation of a hand - in bisca there are (up to?) three cards in a player's hand
hand([c(R1, S1), c(R2, S2), c(R3, S3)]).

% select the trump card - it's the first of the deck and will then be the last
% SD1 is the new deck to be worked on, with the trump card last
trump(SD, X, c(R,S)):- 
	pick_first(c(R,S), SD1, SD),
	flatten(SD1,X).

pick_first(c(R,S), [SD|c(R,S)], [c(R,S)|SD]).

% card dealing - I'M STILL WORKING ON IT
% on an empty shuffled deck it does nothing
deal_cards([],_).
%deal_cards(SD, )
